# 세 개의 장대가 있고 첫 번째 장대에는 반경이 서로 다른 n개의 원판이 쌓여 있다. 각 원판은 반경이 큰 순서대로 쌓여있다. 이제 수도승들이 다음 규칙에 따라 첫 번째 장대에서 세 번째 장대로 옮기려 한다.
# 한 번에 한 개의 원판만을 다른 탑으로 옮길 수 있다.
# 쌓아 놓은 원판은 항상 위의 것이 아래의 것보다 작아야 한다.
# 이 작업을 수행하는데 필요한 이동 순서를 출력하는 프로그램을 작성하라. 단, 이동 횟수는 최소가 되어야 한다.
# 아래 그림은 원판이 5개인 경우의 예시이다.
'''
하노이탑 알고리즘
1. 원반이 한 개면 옮기면 끝!
2. 원반이 n개일 때
    2-1. 1번 기둥에 있는 n개 원반 중 n-1개를 2번 기둥으로 옮긴다.(3번 기둥 옮기기 위한 보조 기둥으로 사용)
    2-2. 1번 기둥에 남아 있는 가장 큰 원반을 3번 기둥으로 옮김
    2-3. 2번 기둥에 있는 n-1개 원반을 다시 3번 기둥으로 옮김(1번 기둥을 옮기기 위한 보조기둥으로 사용)
'''
def hanoi(n,a,b,c):
    if n == 1:
        move.append([a,c])
    else:
        hanoi(n-1,a,c,b)
        move.append([a,c])
        hanoi(n-1,b,a,c)
move = []
hanoi(int(input()),1,2,3)
print(len(move))
print('\n'.join([' '.join(str(i) for i in row) for row in move]))





